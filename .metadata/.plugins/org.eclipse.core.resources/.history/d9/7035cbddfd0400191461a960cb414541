package dlg_MemorySpiel_V1;
public class Dlg_MemorySpiel 
{private static int z_paarKarten;
private static String[][] t_karte;
private static int erst_demesional_karte;
private static int zweite_demesional_karte;
private static String elemnte_posNr="     ";
private static String  karte1;
public static void main(String[] args) 
	{int nochmal_frage = 1;
	do
		{System.out.println("PaarKarteanzahl?");
		z_paarKarten =ConsolReader.readInt();
		Karten_Darstellung();
		Karten_ausfüllen();
		erfölgreiche_Versuch();
		System.out.println("Wollen Sie nochmal Spielen? (0: NO)");
		nochmal_frage = ConsolReader.readInt();
		}
	while (nochmal_frage != 0);
	}//end main
	private static void Karten_Darstellung()
		{//deklarieren
		int z_karten ,
			z_Teiler = 0,
			i_mitte;
		int[]	t_Teiler;
		z_karten   = z_paarKarten * 2;
		 /* Teileranzahl */
		for (int i=1; i<=z_karten;i++)
			{if (z_karten % i == 0 )
				{z_Teiler +=1;
				}//ende if	
			}// ende for Teileranzahl
		t_Teiler = new int[z_Teiler];
		z_Teiler = 0;
		/* t_Teiler Array ausfüllen */
		for (int i=1; i<=z_karten;i++)
			{if (z_karten % i == 0 )
				{t_Teiler[z_Teiler] = i;
				z_Teiler +=1;
				}
			}//ende for t_Teiler Array ausfüllen
		i_mitte = (z_Teiler-1)/2;
		erst_demesional_karte = t_Teiler[i_mitte];
		if((z_Teiler ) % 2 == 0)
			{zweite_demesional_karte = t_Teiler[i_mitte +1];
			t_karte = new String[erst_demesional_karte][zweite_demesional_karte];	
			}
		else
			{zweite_demesional_karte = erst_demesional_karte;
			t_karte = new String[erst_demesional_karte][erst_demesional_karte];			
			}
		for(int i=0 ;i <erst_demesional_karte; i++)
			{for (int j=0 ; j<zweite_demesional_karte; j++)
				{t_karte[i][j] = "0";				
				}
			}
		t_verdecktKarte_drucken();
		}//ende Karten_darstellung
	private static void  t_verdecktKarte_drucken()
	{elemnte_posNr="     ";
	String druck_array = "[0]|  ";
	for (int j=0 ; j<zweite_demesional_karte; j++)
		{elemnte_posNr +="["+j+"]";		
		}
	System.out.println(elemnte_posNr);
	for(int i=0 ;i <erst_demesional_karte; i++)
		{for (int j=0 ; j<zweite_demesional_karte; j++)
			{if(t_karte[i][j]==karte1 )
				{druck_array +=  t_karte[i][j] +"  " ;	
				}
			else 
				{druck_array +=  "0" +"  " ;	
				}			
			}
		System.out.println(druck_array + " |");
		druck_array ="["+(i+1)+"]"+ "|  ";
		} 
}
	private static void Karten_ausfüllen()
		{String[] t_zeichen={"A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V",
				"W","X","Y","Z"};
		int x_karte_pos ,
			y_karte_pos ;
		for (int i =0 ;i<z_paarKarten;i++)
			{int j = 1;
			do
				{x_karte_pos = (int) (Math.random()*(erst_demesional_karte));
				y_karte_pos = (int) (Math.random()* (zweite_demesional_karte));
				if (t_karte[x_karte_pos][y_karte_pos] == "0" )
					{t_karte[x_karte_pos][y_karte_pos] = t_zeichen[i];	
					j++;
					}	
				} 
			while (j<=2);
			}
		}//ende Karten ausfüllen
	private static void erfölgreiche_Versuch()
		{ int 	x_karte1,
				y_karte1,
				x_karte2,
				y_karte2;
		String  karte2;
		int  erfölg_Versuch,
			z_Versuch = 0;
		erfölg_Versuch = 0;
		do
			{// Karte 1 erfassen
			System.out.println("Karte1:");
			do 
				{do
					{System.out.println("x_karte1?");
					x_karte1 = ConsolReader.readInt();
					}
				while (x_karte1< 0 || x_karte1> (erst_demesional_karte-1));
				do
					{System.out.println("y_karte1?");
					y_karte1 = ConsolReader.readInt();
					}
				while (y_karte1<0 || y_karte1> (zweite_demesional_karte-1) );
				karte1 = t_karte[x_karte1][y_karte1];	
				System.out.println("Karte1 : " + karte1);
				}
			while (karte1 == "0");
			//Karte2 erfassen
			System.out.println("Karte2");
			do
				{do
					{System.out.println("x_karte2?");
					x_karte2 = ConsolReader.readInt();
					}
				while (x_karte2< 0 || x_karte2>( erst_demesional_karte-1));
				do
					{System.out.println("y_karte2?");
					y_karte2 = ConsolReader.readInt();
					}
				while(y_karte2< 0 || y_karte2> (zweite_demesional_karte-1));
				karte2 = t_karte[x_karte2][y_karte2];
				System.out.println("Karte2 : " + karte2);
				}
			while (karte2 =="0" || (x_karte2 == x_karte1 & y_karte2 == y_karte1));
			if (karte1 == karte2)	
				{erfölg_Versuch +=1;
				System.out.println("erfölgreiche Versuchen : "+ erfölg_Versuch);
				t_verdecktKarte_drucken();
				t_karte[x_karte1][y_karte1] = "0";
				t_karte[x_karte2][y_karte2] = "0";
				}
			z_Versuch +=1;
			System.out.println("Versuchanzahl : " + z_Versuch);
			}
		while (erfölg_Versuch < z_paarKarten);
		System.out.println("Das Spiel ist Beendet");
		}
}//ende package